{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const validDate = selectedDates[0] - new Date() > 0;\n    if (!validDate) {\n      window.alert('Please choose a date in the future');\n      btnElem.disabled = true;\n    } else {\n      btnElem.addEventListener(\n        'click',\n        e => {\n          btnElem.disabled = true;\n          inputElem.disabled = true;\n          userSelectedDate = setInterval(() => {\n            const ms = selectedDates[0] - new Date();\n            if (ms <= 0) {\n              clearInterval(userSelectedDate);\n              inputElem.disabled = false;\n            }\n            markup(convertMs(ms));\n          });\n        },\n        1000\n      );\n\n      btnElem.disabled = false;\n    }\n  },\n};\nconst inputElem = document.querySelector('#datetime-picker');\nconst btnElem = document.querySelector('[data-start]');\nconst daysElem = document.querySelector('[data-days]');\nconst hoursElem = document.querySelector('[data-hours]');\nconst minutesElem = document.querySelector('[data-minutes]');\nconst secondsElem = document.querySelector('[data-seconds]');\nbtnElem.disabled = true;\nflatpickr(inputElem, options);\n\nfunction markup({ days, hours, minutes, seconds }) {\n  updateTextContent(daysElem, days);\n  updateTextContent(hoursElem, hours);\n  updateTextContent(minutesElem, minutes);\n  updateTextContent(secondsElem, seconds);\n}\nfunction updateTextContent(value, newValue) {\n  const resultValue = newValue.toString().padStart(2, '0');\n  if (value.textContent !== resultValue) {\n    value.textContent = resultValue;\n  }\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","options","selectedDates","btnElem","e","inputElem","ms","markup","convertMs","daysElem","hoursElem","minutesElem","secondsElem","flatpickr","days","hours","minutes","seconds","updateTextContent","value","newValue","resultValue"],"mappings":"wIAEA,IAAIA,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACHA,EAAc,CAAC,EAAI,IAAI,KAAS,GAKhDC,EAAQ,iBACN,QACAC,GAAK,CACHD,EAAQ,SAAW,GACnBE,EAAU,SAAW,GACrBL,EAAmB,YAAY,IAAM,CACnC,MAAMM,EAAKJ,EAAc,CAAC,EAAI,IAAI,KAC9BI,GAAM,IACR,cAAcN,CAAgB,EAC9BK,EAAU,SAAW,IAEvBE,EAAOC,EAAUF,CAAE,CAAC,CAChC,CAAW,CACF,EACD,GACR,EAEMH,EAAQ,SAAW,KApBnB,OAAO,MAAM,oCAAoC,EACjDA,EAAQ,SAAW,GAqBtB,CACH,EACME,EAAY,SAAS,cAAc,kBAAkB,EACrDF,EAAU,SAAS,cAAc,cAAc,EAC/CM,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3DT,EAAQ,SAAW,GACnBU,EAAUR,EAAWJ,CAAO,EAE5B,SAASM,EAAO,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACjDC,EAAkBT,EAAUK,CAAI,EAChCI,EAAkBR,EAAWK,CAAK,EAClCG,EAAkBP,EAAaK,CAAO,EACtCE,EAAkBN,EAAaK,CAAO,CACxC,CACA,SAASC,EAAkBC,EAAOC,EAAU,CAC1C,MAAMC,EAAcD,EAAS,SAAQ,EAAG,SAAS,EAAG,GAAG,EACnDD,EAAM,cAAgBE,IACxBF,EAAM,YAAcE,EAExB,CACA,SAASb,EAAUF,EAAI,CAQrB,MAAMQ,EAAO,KAAK,MAAMR,EAAK,KAAG,EAE1BS,EAAQ,KAAK,MAAOT,EAAK,MAAO,IAAI,EAEpCU,EAAU,KAAK,MAAQV,EAAK,MAAO,KAAQ,GAAM,EAEjDW,EAAU,KAAK,MAASX,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}