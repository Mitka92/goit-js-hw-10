{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nconst inputElem = document.querySelector('#datetime-picker');\nconst btnElem = document.querySelector('[data-start]');\nconst daysElem = document.querySelector('[data-days]');\nconst hoursElem = document.querySelector('[data-hours]');\nconst minutesElem = document.querySelector('[data-minutes]');\nconst secondsElem = document.querySelector('[data-seconds]');\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const validDate = userSelectedDate - new Date() > 0;\n    if (!validDate) {\n      window.alert('Please choose a date in the future');\n      btnElem.disabled = true;\n    } else {\n      btnElem.disabled = false;\n    }\n  },\n};\n\nbtnElem.disabled = true;\nflatpickr(inputElem, options);\nbtnElem.addEventListener('click', e => {\n  btnElem.disabled = true;\n  inputElem.disabled = true;\n  const intervalId = setInterval(() => {\n    const ms = userSelectedDate - new Date();\n    if (ms <= 1000) {\n      clearInterval(intervalId);\n      inputElem.disabled = false;\n    }\n    markup(convertMs(ms));\n  }, 1000);\n});\nfunction markup({ days, hours, minutes, seconds }) {\n  updateTextContent(daysElem, days);\n  updateTextContent(hoursElem, hours);\n  updateTextContent(minutesElem, minutes);\n  updateTextContent(secondsElem, seconds);\n}\nfunction updateTextContent(value, newValue) {\n  const resultValue = newValue.toString().padStart(2, '0');\n  if (value.textContent !== resultValue) {\n    value.textContent = resultValue;\n  }\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputElem","btnElem","daysElem","hoursElem","minutesElem","secondsElem","userSelectedDate","options","selectedDates","flatpickr","intervalId","ms","markup","convertMs","days","hours","minutes","seconds","updateTextContent","value","newValue","resultValue"],"mappings":"wIAEA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAC3D,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAChBF,EAAmB,IAAI,KAAS,EAKhDL,EAAQ,SAAW,IAHnB,OAAO,MAAM,oCAAoC,EACjDA,EAAQ,SAAW,GAItB,CACH,EAEAA,EAAQ,SAAW,GACnBQ,EAAUT,EAAWO,CAAO,EAC5BN,EAAQ,iBAAiB,QAAS,GAAK,CACrCA,EAAQ,SAAW,GACnBD,EAAU,SAAW,GACrB,MAAMU,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAKL,EAAmB,IAAI,KAC9BK,GAAM,MACR,cAAcD,CAAU,EACxBV,EAAU,SAAW,IAEvBY,EAAOC,EAAUF,CAAE,CAAC,CACrB,EAAE,GAAI,CACT,CAAC,EACD,SAASC,EAAO,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACjDC,EAAkBhB,EAAUY,CAAI,EAChCI,EAAkBf,EAAWY,CAAK,EAClCG,EAAkBd,EAAaY,CAAO,EACtCE,EAAkBb,EAAaY,CAAO,CACxC,CACA,SAASC,EAAkBC,EAAOC,EAAU,CAC1C,MAAMC,EAAcD,EAAS,SAAQ,EAAG,SAAS,EAAG,GAAG,EACnDD,EAAM,cAAgBE,IACxBF,EAAM,YAAcE,EAExB,CACA,SAASR,EAAUF,EAAI,CAQrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAE1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EAEpCK,EAAU,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EAEjDM,EAAU,KAAK,MAASN,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}